{"version":3,"sources":["webpack:///./src/images/svg/small-location.svg","webpack:///./src/pages/careers/_layout-components/_team-card.js","webpack:///./src/pages/careers/_layout-components/_email-button.js","webpack:///./src/pages/careers/jobs/_search-form.js","webpack:///./src/pages/careers/jobs/_search-filters.js","webpack:///./src/pages/careers/jobs/_card-list.js","webpack:///./src/pages/careers/jobs/_pagination.js","webpack:///./src/pages/careers/jobs/_no-results.js","webpack:///./src/pages/careers/jobs/_badges.js","webpack:///./src/pages/careers/jobs/index.js","webpack:///./src/pages/careers/_layout-components/_banner.js"],"names":["React","SmallLocation","props","createElement","defaultProps","module","exports","default","ChevronRight","styled","Chevron","Bounce","keyframes","StyledCard","LocalizedLink","height","NormalCard","article","ImageWrapper","div","StyledContent","StyledHeader","Header","StyledLink","TeamCard","to","img_data","display_team_name","tagline","data","width","alt","localize","as","EmailButton","text","href","secondary","StyledForm","form","device","tabletL","StyledSearchIcon","SearchIcon","SearchForm","memo","search","setSearch","onSubmit","e","preventDefault","style","marginLeft","value","onChange","target","placeholder","autoFocus","displayName","FilterContainer","AccordionWrapper","ClearFilter","Text","header_style","padding","item_style","borderBottom","display","CheckboxWrapper","Flex","SearchFilters","filters","setFilters","toggleCheck","name","includes","filter","jc","size","onClick","has_single_state","is_default_open","header","arrow_thin","direction","m","Object","keys","team_names","sort","map","team_name","idx","key","ai","mb","checked","locations","location","StyledLocation","Location","JobCard","Ul","ul","Li","li","StyledDivider","Divider","StyledFlex","CardList","position","toHashFormat","id","title","tablet_ai","tablet_direction","team","Desktop","type","weight","qualifications","qualification","flat","TopText","ButtonLeft","Button","Pagination","children","page_limit","all_records","Children","toArray","total_records","length","needs_pagination","useState","section_selection","setSectionSelection","start_index","setStartIndex","has_next","has_previous","end_index","current_records","slice","useEffect","record","previous_selection","window","scrollTo","top","behavior","disabled","next_selection","NoResultsFound","marginTop","align","CrossIconStyled","CrossIcon","BadgeContainer","BadgeWrapper","Badge","Badges","all_queries","initializeFilters","url_filters","URLSearchParams","get","split","f","initializeSearch","url_search","debouncedUpdateQueryParams","debounce","s","current_query","Array","isArray","forEach","query","push","history","pushState","join","SearchContainer","Container","filterPositions","filter_positions","getPositionsByQuery","matchSorter","trim","threshold","rankings","WORD_STARTS_WITH","WithIntl","isBrowser","filtered_positions","setFilteredPositions","filtered","padding_top","Section","section","Banner","p1","p2","button_text","color","marginBottom","RoleBanner"],"mappings":"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","file":"component---src-pages-careers-jobs-index-js-11884b6a635f36c7c7db.js","sourcesContent":["var React = require('react');\n\nfunction SmallLocation (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"id\":\"small-location\",\"key\":0},\"Location\"),React.createElement(\"path\",{\"fill\":\"#FF444F\",\"d\":\"M8 0c3.314 0 6 2.686 6 6 0 2.126-1.775 5.17-5.31 9.218L8 16l-.374-.422C3.88 11.35 2 8.188 2 6c0-3.314 2.686-6 6-6zm0 1C5.239 1 3 3.239 3 6c0 1.687 1.466 4.31 4.411 7.802l.589.686.589-.686C11.534 10.31 13 7.687 13 6c0-2.761-2.239-5-5-5zm0 3.1c1.105 0 2 .895 2 2s-.895 2-2 2-2-.895-2-2 .895-2 2-2zm0 1c-.552 0-1 .448-1 1s.448 1 1 1 1-.448 1-1-.448-1-1-1z\",\"key\":1})]);\n}\n\nSmallLocation.defaultProps = {\"role\":\"img\",\"aria-labelledby\":\"small-location\",\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = SmallLocation;\n\nSmallLocation.default = SmallLocation;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { keyframes } from 'styled-components'\nimport { QueryImage, Text, Header } from 'components/elements'\nimport { LocalizedLink, localize } from 'components/localization'\n// SVG\nimport Chevron from 'images/svg/carousel-chevron.svg'\n\nconst ChevronRight = styled(Chevron)`\n    transform: rotate(180deg);\n    width: 16px;\n    height: 16px;\n`\nconst Bounce = keyframes`\n    0%, 20%, 80%, 100% {\n        transform: translateX(0) rotate(180deg);\n    }\n    40% {\n        transform: translateX(18px) rotate(180deg);\n    }\n    50% {\n        transform: translateX(0) rotate(180deg);\n    }\n    60% {\n        transform: translateX(9px) rotate(180deg);\n    }\n`\n\nexport const StyledCard = styled(LocalizedLink)`\n    text-decoration: none;\n    position: relative;\n    height: ${(props) => (props.height ? props.height : 'auto')};\n    width: 100%;\n    box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n    background: var(--color-white);\n    transition: all 0.3s;\n    overflow: hidden;\n    cursor: pointer;\n\n    &:hover {\n        transform: translateY(-1.1rem) scale(1.02);\n\n        #carousel-chevron-icon-svg {\n            g {\n                fill: var(--color-red);\n            }\n\n            animation: ${Bounce} 1.2s infinite;\n        }\n    }\n`\n\nexport const NormalCard = styled.article`\n    position: relative;\n    height: ${(props) => (props.height ? props.height : 'auto')};\n    width: 100%;\n    box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n    background: var(--color-white);\n`\n\nconst ImageWrapper = styled.div`\n    height: 14.4rem;\n    width: 100%;\n`\n\nconst StyledContent = styled.div`\n    padding: 3.2rem;\n    width: 100%;\n`\n\nconst StyledHeader = styled(Header)`\n    margin-bottom: 0.8rem;\n    font-size: var(--text-size-sm);\n`\n\nconst StyledLink = styled.div`\n    position: absolute;\n    bottom: 3.2rem;\n    right: 3.2rem;\n`\n\nconst TeamCard = ({ to, img_data, display_team_name, tagline }) => (\n    <StyledCard height=\"38.8rem\" to={to}>\n        <ImageWrapper>\n            <QueryImage\n                data={img_data}\n                height=\"14.4rem\"\n                width=\"100%\"\n                alt={localize('Team ') + display_team_name}\n            />\n        </ImageWrapper>\n        <StyledContent>\n            <StyledHeader as=\"h5\">{display_team_name}</StyledHeader>\n            <Text>{tagline}</Text>\n            <StyledLink>\n                <ChevronRight />\n            </StyledLink>\n        </StyledContent>\n    </StyledCard>\n)\n\nTeamCard.propTypes = {\n    display_team_name: PropTypes.string,\n    img_data: PropTypes.object,\n    tagline: PropTypes.string,\n    team_name: PropTypes.string,\n    to: PropTypes.string,\n}\n\nexport default TeamCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'components/form'\n\nexport const EmailButton = ({ text, ...props }) => (\n    <a href=\"mailto:recruitment@deriv.com\" {...props}>\n        <Button secondary=\"true\">{text}</Button>\n    </a>\n)\n\nEmailButton.propTypes = {\n    text: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport device from 'themes/device'\nimport { Input } from 'components/form'\nimport SearchIcon from 'images/svg/search.svg'\n\nconst StyledForm = styled.form`\n    position: relative;\n\n    input {\n        &::placeholder {\n            opacity: 1 !important;\n        }\n    }\n\n    @media ${device.tabletL} {\n        margin-top: 4.6rem;\n\n        .input-wrapper {\n            width: 100% !important;\n        }\n    }\n`\nconst StyledSearchIcon = styled(SearchIcon)`\n    position: absolute;\n    left: 1.6rem;\n    top: 1.2rem;\n    height: 16px;\n    width: 16px;\n\n    path {\n        fill: var(--color-black);\n    }\n`\n\nconst SearchForm = React.memo(({ search, setSearch }) => {\n    return (\n        <>\n            <StyledForm onSubmit={e => e.preventDefault()}>\n                <StyledSearchIcon />\n                <Input\n                    style={{ marginLeft: '4rem' }}\n                    value={search}\n                    onChange={e => setSearch(e.target.value)}\n                    placeholder={'Search jobs'}\n                    autoFocus\n                />\n            </StyledForm>\n        </>\n    )\n})\n\nSearchForm.displayName = 'SearchForm'\n\nSearchForm.propTypes = {\n    search: PropTypes.string,\n    setSearch: PropTypes.func,\n}\n\nexport default SearchForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { team_names } from '../_controller/_teams'\n// import { job_types } from '../_model/_job_types/_job_types'\nimport { locations } from '../_model/_locations/_locations'\nimport device from 'themes/device'\nimport { Flex } from 'components/containers'\nimport { Accordion, AccordionItem, Divider, Text, Checkbox } from 'components/elements'\n\nconst FilterContainer = styled.div`\n    width: 100%;\n    max-width: 28.2rem;\n\n    @media ${device.tabletL} {\n        max-width: unset;\n    }\n`\n\nconst AccordionWrapper = styled.div`\n    div:first-child {\n        box-shadow: unset;\n    }\n`\n\nconst ClearFilter = styled(Text)`\n    margin-left: 1.6rem;\n    cursor: pointer;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`\n\nconst header_style = {\n    padding: 0,\n}\n\nconst item_style = {\n    borderBottom: '1px solid var(--color-grey-2)',\n    display: 'flex',\n}\n\nconst CheckboxWrapper = styled(Flex)`\n    cursor: pointer;\n`\n\nconst SearchFilters = ({ filters, setFilters }) => {\n    const toggleCheck = name => {\n        // If the name already inside filters, remove it\n        if (filters.includes(name)) {\n            setFilters(filters.filter(filter => filter !== name))\n        } else {\n            setFilters([...filters, name])\n        }\n    }\n\n    const clearFilters = () => setFilters([])\n\n    return (\n        <FilterContainer>\n            <Flex jc=\"space-between\">\n                <Text size=\"var(--text-size-xs)\">Filters</Text>\n                <ClearFilter onClick={clearFilters} size=\"var(--text-size-xs)\">\n                    Clear filters\n                </ClearFilter>\n            </Flex>\n            <Divider height=\"2px\" />\n            <AccordionWrapper>\n                <Accordion has_single_state is_default_open>\n                    {/* <AccordionItem\n                        header={localize('Job types')}\n                        header_style={header_style}\n                        // parent_style={parent_style}\n                        style={item_style}\n                        arrow_thin\n                    >\n                        <Flex direction=\"column\" m=\"1.6rem 0 0.8rem\">\n                            {Object.keys(job_types).map((job_type, idx) => (\n                                <CheckboxWrapper\n                                    key={idx}\n                                    jc=\"flex-start\"\n                                    ai=\"center\"\n                                    mb=\"0.8rem\"\n                                    onClick={() => toggleCheck(job_type)}\n                                >\n                                    <Checkbox checked={filters.includes(job_type)} />\n                                    <Text>{job_types[job_type]}</Text>\n                                </CheckboxWrapper>\n                            ))}\n                        </Flex>\n                    </AccordionItem> */}\n                    <AccordionItem\n                        header={'Teams'}\n                        header_style={header_style}\n                        // parent_style={parent_style}\n                        style={item_style}\n                        arrow_thin\n                    >\n                        <Flex direction=\"column\" m=\"1.6rem 0 0.8rem\">\n                            {Object.keys(team_names)\n                                .sort()\n                                .map((team_name, idx) => (\n                                    <CheckboxWrapper\n                                        key={idx}\n                                        jc=\"flex-start\"\n                                        ai=\"center\"\n                                        mb=\"0.8rem\"\n                                        onClick={() => toggleCheck(team_name)}\n                                    >\n                                        <Checkbox\n                                            onChange={() => toggleCheck(team_name)}\n                                            checked={filters.includes(team_name)}\n                                            secondary\n                                        />\n                                        <Text>{team_names[team_name]}</Text>\n                                    </CheckboxWrapper>\n                                ))}\n                        </Flex>\n                    </AccordionItem>\n                    <AccordionItem\n                        header={'Location'}\n                        header_style={header_style}\n                        // parent_style={parent_style}\n                        style={item_style}\n                        arrow_thin\n                    >\n                        <Flex direction=\"column\" m=\"1.6rem 0 0.8rem\">\n                            {Object.keys(locations)\n                                .sort()\n                                .map((location, idx) => (\n                                    <CheckboxWrapper\n                                        key={idx}\n                                        jc=\"flex-start\"\n                                        ai=\"center\"\n                                        mb=\"0.8rem\"\n                                        onClick={() => toggleCheck(location)}\n                                    >\n                                        <Checkbox\n                                            onChange={() => toggleCheck(location)}\n                                            checked={filters.includes(location)}\n                                            secondary\n                                        />\n                                        <Text>{locations[location]}</Text>\n                                    </CheckboxWrapper>\n                                ))}\n                        </Flex>\n                    </AccordionItem>\n                </Accordion>\n            </AccordionWrapper>\n        </FilterContainer>\n    )\n}\n\nSearchFilters.propTypes = {\n    filters: PropTypes.array,\n    setFilters: PropTypes.func,\n}\n\nexport default SearchFilters\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { NormalCard } from '../_layout-components/_team-card'\nimport { team_names } from '../_controller/_teams'\nimport { locations } from '../_model/_locations/_locations'\nimport device from 'themes/device'\nimport { Flex, Show } from 'components/containers'\nimport { Text, Header, Divider } from 'components/elements'\nimport { LinkButton } from 'components/form'\nimport { toHashFormat } from 'common/utility'\n// SVG\nimport Location from 'images/svg/small-location.svg'\n\nconst StyledLocation = styled(Location)`\n    margin-right: 0.8rem;\n\n    & path {\n        fill: var(--color-black);\n    }\n`\n\nconst JobCard = styled(NormalCard)`\n    padding: 3.2rem;\n    margin-bottom: 2.4rem;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n    > ${Flex} {\n        margin-top: 1.6rem;\n\n        @media ${device.tabletL} {\n            margin-bottom: 1.6rem;\n        }\n    }\n`\n\nconst Ul = styled.ul`\n    list-style-type: disc;\n    font-size: var(--text-size-s);\n    padding-left: 2rem;\n    color: var(--color-black);\n    margin-top: 1.6rem;\n    margin-bottom: 2.8rem;\n`\n\nconst Li = styled.li`\n    margin-bottom: 1.6rem;\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n`\n\nconst StyledDivider = styled(Divider)`\n    margin-top: 1.6rem;\n    margin-bottom: 1.6rem;\n`\nconst StyledFlex = styled(Flex)`\n    margin: 0 2.4rem;\n\n    @media ${device.tabletL} {\n        margin: 0;\n    }\n`\n\nconst CardList = ({ position }) => {\n    return (\n        <JobCard to={`careers/jobs/job#${toHashFormat(position.id)}`}>\n            <Header size=\"var(--text-size-sm)\">{position.title}</Header>\n            <Flex jc=\"flex-start\" ai=\"center\" tablet_ai=\"flex-start\" tablet_direction=\"column\">\n                <Text>{team_names[position.team]}</Text>\n                <StyledFlex width=\"auto\" height=\"auto\" ai=\"center\">\n                    <StyledLocation />\n                    <Text>{locations[position.location]}</Text>\n                </StyledFlex>\n                <Show.Desktop>\n                    <Text>{position.type}</Text>\n                </Show.Desktop>\n            </Flex>\n            <Show.Desktop>\n                <StyledDivider height=\"2px\" />\n                <Text weight=\"bold\">Qualifications:</Text>\n                <Ul>\n                    {position.qualifications &&\n                        position.qualifications.map((qualification, idx) => (\n                            <Li key={idx}>\n                                <Text>{qualification}</Text>\n                            </Li>\n                        ))}\n                </Ul>\n            </Show.Desktop>\n            <Flex>\n                <LinkButton flat=\"true\" to={`careers/jobs/job#${toHashFormat(position.id)}`}>\n                    View more\n                </LinkButton>\n            </Flex>\n        </JobCard>\n    )\n}\n\nCardList.propTypes = {\n    position: PropTypes.object,\n}\n\nexport default CardList\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Flex } from 'components/containers'\nimport { Text } from 'components/elements'\nimport { Button } from 'components/form'\n\nconst TopText = styled(Text)`\n    font-size: var(--text-size-xs);\n    margin-bottom: 2.6rem;\n    margin-top: 5.4rem;\n`\n\nconst ButtonLeft = styled(Button)`\n    margin-right: 1.6rem;\n`\n\nconst Pagination = ({ children, page_limit }) => {\n    const all_records = React.Children.toArray(children)\n    const total_records = all_records.length\n    const needs_pagination = total_records > page_limit\n\n    const [section_selection, setSectionSelection] = React.useState(page_limit)\n    const [start_index, setStartIndex] = React.useState(section_selection - page_limit)\n\n    const has_next = section_selection < total_records\n    const has_previous = section_selection > page_limit\n    const end_index = needs_pagination ? section_selection : total_records\n\n    const current_records = all_records.slice(start_index, end_index)\n\n    const resetToFirstPage = () => {\n        setSectionSelection(page_limit)\n        setStartIndex(0)\n    }\n\n    React.useEffect(() => {\n        resetToFirstPage()\n    }, [children])\n\n    const handleNext = () => {\n        const next_selection = section_selection + page_limit\n        if (has_next) {\n            if (next_selection > total_records) {\n                setSectionSelection(total_records)\n                setStartIndex(section_selection)\n            } else {\n                setSectionSelection(next_selection)\n                setStartIndex(next_selection - page_limit)\n            }\n            window.scrollTo({ top: 0, behavior: 'smooth' })\n        }\n    }\n\n    const handlePrevious = () => {\n        const previous_selection = section_selection - page_limit\n        if (has_previous) {\n            if (previous_selection < page_limit) {\n                setSectionSelection(page_limit)\n                setStartIndex(0)\n            } else {\n                setSectionSelection(previous_selection)\n                setStartIndex(previous_selection - page_limit)\n            }\n            window.scrollTo({ top: 0, behavior: 'smooth' })\n        }\n    }\n\n    return (\n        <>\n            <Flex jc=\"space-between\">\n                <TopText>{`Viewing ${start_index + 1}-${end_index} of ${total_records}`}</TopText>\n                {/* {needs_pagination && (\n                    <Flex width=\"auto\">\n                        <ButtonLeft flat onClick={handlePrevious} disabled={!has_previous}>\n                            {localize('Previous')}\n                        </ButtonLeft>\n                        <Button flat onClick={handleNext} disabled={!has_next}>\n                            {localize('Next')}\n                        </Button>\n                    </Flex>\n                )} */}\n            </Flex>\n            {current_records.map(record => record)}\n            {needs_pagination && (\n                <Flex jc=\"space-between\" ai=\"center\">\n                    <TopText>\n                        {`Viewing ${start_index + 1}-${end_index} of ${total_records}`}\n                    </TopText>\n                    <Flex width=\"auto\">\n                        <ButtonLeft flat onClick={handlePrevious} disabled={!has_previous}>\n                            Previous\n                        </ButtonLeft>\n                        <Button flat onClick={handleNext} disabled={!has_next}>\n                            Next\n                        </Button>\n                    </Flex>\n                </Flex>\n            )}\n        </>\n    )\n}\n\nPagination.propTypes = {\n    children: PropTypes.node,\n    page_limit: PropTypes.number,\n}\n\nexport default Pagination\n","import React from 'react'\nimport { Text, Header } from 'components/elements'\n\nconst NoResultsFound = () => (\n    <div style={{ marginTop: '10rem' }}>\n        <Header as=\"h2\" size=\"var(--text-size-l)\" align=\"center\">\n            No results found.\n        </Header>\n        <Text align=\"center\" style={{ marginTop: '1.6rem' }}>\n            There are currently no open positions. Search again or try removing filters.\n        </Text>\n    </div>\n)\n\nexport default NoResultsFound\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { all_queries } from '../_controller/_teams'\nimport { Flex } from 'components/containers'\nimport { Text } from 'components/elements'\nimport CrossIcon from 'images/svg/cross.svg'\n\nconst CrossIconStyled = styled(CrossIcon)`\n    height: 16px;\n    width: 16px;\n\n    g {\n        g {\n            g {\n                fill: var(--color-black);\n            }\n        }\n    }\n`\n\nconst BadgeContainer = styled.div`\n    border-radius: 12px;\n    background-color: var(--color-grey-11);\n    padding: 3px 8px;\n    margin: 0.4rem;\n    display: flex;\n    align-items: center;\n\n    svg {\n        margin-left: 8px;\n        cursor: pointer;\n    }\n`\n\nconst BadgeWrapper = styled(Flex)`\n    flex-wrap: wrap;\n\n    > *:not(:last-child) {\n        margin-right: 0.8rem;\n    }\n`\n\nconst Badge = ({ text, onClick }) => {\n    return (\n        <BadgeContainer>\n            <Text size=\"var(--text-size-xxs)\">{text}</Text>\n            <CrossIconStyled onClick={onClick} />\n        </BadgeContainer>\n    )\n}\nBadge.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string,\n}\n\nconst Badges = ({ filters, setFilters }) => {\n    const removeFilter = name => {\n        setFilters(filters.filter(filter => filter !== name))\n    }\n    return (\n        <BadgeWrapper jc=\"unset\">\n            {filters.map((filter, idx) => (\n                <Badge onClick={() => removeFilter(filter)} key={idx} text={all_queries[filter]} />\n            ))}\n        </BadgeWrapper>\n    )\n}\n\nBadges.propTypes = {\n    filters: PropTypes.array,\n    setFilters: PropTypes.func,\n}\n\nexport default Badges\n","import React from 'react'\nimport styled from 'styled-components'\nimport matchSorter from 'match-sorter'\nimport { RoleBanner } from '../_layout-components/_banner'\nimport { getPositionsByQuery, team_names } from '../_controller/_teams'\nimport { locations } from '../_model/_locations/_locations'\nimport SearchForm from './_search-form'\nimport SearchFilters from './_search-filters'\nimport CardList from './_card-list'\nimport Pagination from './_pagination'\nimport NoResultsFound from './_no-results'\nimport Badges from './_badges'\nimport device from 'themes/device'\nimport { isBrowser, debounce } from 'common/utility'\nimport { SEO, Container, SectionContainer, Flex } from 'components/containers'\nimport Layout from 'components/layout/layout'\nimport { WithIntl } from 'components/localization'\nimport { Divider } from 'components/elements'\n\nconst StyledDivider = styled(Divider)`\n    margin: 0 5rem;\n\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\n\nconst pushToQueryParams = (filters, search) => {\n    let current_query = ['?filter=']\n\n    if (Array.isArray(filters)) {\n        filters.forEach((query, idx) => {\n            if (idx === 0) {\n                current_query.push(query)\n            } else {\n                current_query.push(`,${query}`)\n            }\n        })\n    }\n    current_query.push(`&search=${search}`)\n\n    window.history.pushState(null, null, current_query.join(''))\n}\n\nconst initializeFilters = () => {\n    var url_params = new URLSearchParams(window.location.search)\n    const url_filters = url_params.get('filter')\n\n    if (url_filters) {\n        let filter_arr = url_filters.split(',').filter(f => !!team_names[f] || !!locations[f])\n        return filter_arr\n    }\n\n    return []\n}\n\nconst initializeSearch = () => {\n    var url_params = new URLSearchParams(window.location.search)\n    const url_search = url_params.get('search')\n\n    if (url_search) {\n        return url_search\n    }\n    return ''\n}\n\nconst debouncedUpdateQueryParams = debounce((f, s) => pushToQueryParams(f, s), 400)\n\nconst SearchContainer = styled(Container)`\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\n\nconst filterPositions = (filters, search) => {\n    const filter_positions = getPositionsByQuery(filters)\n    const search_positions = matchSorter(filter_positions, search.trim(), {\n        keys: ['title', 'team', 'location'],\n        threshold: matchSorter.rankings.WORD_STARTS_WITH,\n    })\n    return search_positions\n}\n\nconst Jobs = () => {\n    if (!isBrowser()) return null\n\n    const [filters, setFilters] = React.useState(initializeFilters)\n    const [search, setSearch] = React.useState(initializeSearch)\n    const [filtered_positions, setFilteredPositions] = React.useState(() =>\n        filterPositions(filters, search),\n    )\n\n    React.useEffect(() => {\n        debouncedUpdateQueryParams(filters, search)\n\n        const filtered = filterPositions(filters, search)\n        setFilteredPositions(filtered)\n    }, [search, filters])\n\n    return (\n        <Layout type=\"careers\" padding_top=\"10rem\">\n            <SEO title={'Jobs'} />\n            <SectionContainer>\n                <SearchContainer align=\"flex-start\">\n                    <SearchFilters filters={filters} setFilters={setFilters} />\n                    <StyledDivider height=\"104.6rem\" width=\"2px\" />\n                    <Flex direction=\"column\">\n                        <SearchForm search={search} setSearch={setSearch} />\n                        <Badges filters={filters} setFilters={setFilters} />\n                        {!!filtered_positions.length && (\n                            <Pagination page_limit={4}>\n                                {filtered_positions.map((position, idx) => (\n                                    <CardList key={idx} position={position} />\n                                ))}\n                            </Pagination>\n                        )}\n                        {!filtered_positions.length && <NoResultsFound />}\n                    </Flex>\n                </SearchContainer>\n            </SectionContainer>\n            <RoleBanner />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(Jobs)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { EmailButton } from './_email-button'\nimport { Text, Header } from 'components/elements'\nimport { Flex } from 'components/containers'\n\nconst Section = styled.section`\n    background-color: var(--color-black-3);\n    padding: 3.2rem 0;\n\n    ${Header} {\n        padding-bottom: 0.8rem;\n    }\n    ${Text} {\n        max-width: 55.9rem;\n    }\n`\n\nexport const Banner = ({ header, p1, p2, button_text }) => (\n    <Section>\n        <Flex direction=\"column\" ai=\"center\">\n            <Header align=\"center\" as=\"h3\" color=\"white\">\n                {header}\n            </Header>\n            <Text align=\"center\" color=\"white\">\n                {p1}\n            </Text>\n            <Text align=\"center\" color=\"white\" style={{ marginBottom: '2.4rem' }}>\n                {p2}\n            </Text>\n            <EmailButton text={button_text} />\n        </Flex>\n    </Section>\n)\n\nexport const RoleBanner = () => (\n    <Banner\n        header={'Don’t see your role listed?'}\n        p1={'Even if you don’t see a role that interests you, please send us your CV.'}\n        p2={'We will contact you if a job that matches your background becomes available.'}\n        button_text={'Send us your CV'}\n    />\n)\n\nBanner.propTypes = {\n    button_text: PropTypes.string,\n    header: PropTypes.string,\n    p1: PropTypes.string,\n    p2: PropTypes.string,\n}\n"],"sourceRoot":""}