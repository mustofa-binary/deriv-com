{"version":3,"sources":["webpack:///./src/pages/careers/locations/_location-layout.js","webpack:///./src/images/svg/map.svg","webpack:///./src/pages/careers/_layout-components/_link-list.js","webpack:///./src/pages/careers/_layout-components/_email-button.js","webpack:///./src/pages/careers/_layout-components/_banner.js","webpack:///./src/pages/careers/_layout-components/_container.js","webpack:///./src/pages/careers/locations/labuan/index.js"],"names":["Pin","styled","MapPin","StyledContainer","Container","device","tablet","StyledHeader","Header","Subheadline","Text","Hero","display_name","name","img_data","description","data","style","height","width","alt","as","has_no_end_slash","secondary","to","First","div","Second","Third","Fourth","FirstSection","SectionContainer","ImageWrapper","LocationCard","article","CardText","Iframe","iframe","LocationLayout","location","images","positions","getPositionsByLocation","sort","a","b","title","localeCompare","mapped_positions","map","position","text","toHashFormat","id","header_p","direction","padding","align","size","tablet_direction","first_p","first_img","marginBottom","jc","mr","ai","mb","grid_images","localize","ml","src","map_api_key","p","max_width","maxWidth","map_text","google_map_link","rel","target","href","address","list_items","React","Map","props","createElement","defaultProps","module","exports","default","ChevronRight","Chevron","List","ul","ListItem","li","tabletL","Circle","span","StyledText","MiddleText","LinkList","item","idx","key","tablet_ai","weight","middle_text","number","EmailButton","Section","section","Banner","header","p1","p2","button_text","color","RoleBanner","CareerContainer","desktop","laptopL","desktopL","WithIntl","type","padding_top","labuan"],"mappings":"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","file":"component---src-pages-careers-locations-labuan-index-js-f74e26bc8ca8144ca6f1.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { getPositionsByLocation } from '../_controller/_teams'\nimport { LinkList } from '../_layout-components/_link-list'\nimport { RoleBanner } from '../_layout-components/_banner'\nimport Container from '../_layout-components/_container'\nimport device from 'themes/device'\nimport { SectionContainer, Flex } from 'components/containers'\nimport { Text, LinkText, Header, BackgroundImage, QueryImage } from 'components/elements'\nimport { LinkButton } from 'components/form'\nimport { toHashFormat, map_api_key } from 'common/utility'\nimport { localize } from 'components/localization'\nimport MapPin from 'images/svg/map.svg'\n\nconst Pin = styled(MapPin)`\n    min-width: 24px;\n    height: 24px;\n    margin-right: 13px;\n`\nconst StyledContainer = styled(Container)`\n    flex-direction: column;\n    align-items: flex-start;\n    height: 100%;\n\n    @media ${device.tablet} {\n        padding: 0 2rem;\n    }\n`\n\nconst StyledHeader = styled(Header)`\n    font-size: var(--text-size-xl);\n    margin-bottom: 2.4rem;\n    color: var(--color-white);\n`\n\nconst Subheadline = styled(Text)`\n    font-size: var(--text-size-sm);\n    color: var(--color-white);\n    max-width: 58.8rem;\n    margin-bottom: 8rem;\n`\n\nconst Hero = ({ display_name, name, img_data, description }) => {\n    return (\n        <BackgroundImage\n            data={img_data}\n            style={{\n                height: '80rem',\n                width: '100%',\n            }}\n            alt={display_name}\n        >\n            <StyledContainer>\n                <StyledHeader as=\"h1\">{display_name}</StyledHeader>\n                <Subheadline>{description}</Subheadline>\n                <LinkButton\n                    has_no_end_slash\n                    secondary=\"true\"\n                    to={`/careers/jobs/?filter=${name}&search=`}\n                >\n                    {`View open positions in ${display_name}`}\n                </LinkButton>\n            </StyledContainer>\n        </BackgroundImage>\n    )\n}\n\nHero.propTypes = {\n    description: PropTypes.string,\n    display_name: PropTypes.string,\n    img_data: PropTypes.object,\n    name: PropTypes.string,\n}\n\nconst First = styled.div`\n    margin-right: 0.8rem;\n    width: 100%;\n    max-width: 24.7rem;\n`\n\nconst Second = styled.div`\n    margin-left: 0.8rem;\n    width: 100%;\n    max-width: 24.7rem;\n`\n\nconst Third = styled.div`\n    width: 100%;\n    max-width: 50.9rem;\n    margin-top: 0.8rem;\n`\n\nconst Fourth = styled.div`\n    width: 100%;\n    max-width: 51.4rem;\n`\n\nconst FirstSection = styled(SectionContainer)`\n    ${Header} {\n        margin-bottom: 8rem;\n    }\n    ${Text} {\n        max-width: 41.5rem;\n        margin-right: 6.4rem;\n\n        @media ${device.tablet} {\n            margin-right: 0;\n            margin-bottom: 2rem;\n        }\n    }\n    @media ${device.tablet} {\n        padding: 8rem 2rem;\n    }\n`\nconst ImageWrapper = styled.div`\n    max-width: 53.9rem;\n    width: 100%;\n`\n\nconst LocationCard = styled.article`\n    overflow: hidden;\n    max-width: 99.6rem;\n    margin: 0 auto;\n    border-radius: 4px;\n    box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n`\n\nconst CardText = styled(Text)`\n    margin-top: 1.6rem;\n    margin-bottom: 4rem;\n`\n\nconst Iframe = styled.iframe`\n    width: 100%;\n    height: 100%;\n    border: 0;\n`\n\nexport const LocationLayout = ({ location, images }) => {\n    const { display_name, name } = location\n    if (!display_name) return null\n\n    const positions = getPositionsByLocation(name).sort((a, b) => a.title.localeCompare(b.title))\n    const mapped_positions = positions\n        ? positions.map((position) => ({\n              text: position.title,\n              to: `careers/jobs/job#${toHashFormat(position.id)}`,\n          }))\n        : []\n\n    return (\n        <>\n            <Hero\n                display_name={display_name}\n                name={location.name}\n                description={location.header_p}\n                img_data={images[location.name]}\n            />\n            <Container direction=\"column\">\n                <FirstSection padding=\"12rem 0\">\n                    <Header align=\"center\" as=\"h2\" size={'var(--text-size-header-1)'}>\n                        {`Living in ${display_name}`}\n                    </Header>\n                    <Flex tablet_direction=\"column\">\n                        <Text size=\"var(--text-size-sm)\">{location.first_p}</Text>\n                        <ImageWrapper>\n                            <QueryImage\n                                data={images[location.first_img]}\n                                alt={`Living in ${display_name}`}\n                                width=\"100%\"\n                            />\n                        </ImageWrapper>\n                    </Flex>\n                </FirstSection>\n            </Container>\n            <SectionContainer padding=\"0rem\">\n                <Header\n                    align=\"center\"\n                    as=\"h2\"\n                    size={'var(--text-size-header-1)'}\n                    style={{ marginBottom: '6.4rem' }}\n                >\n                    Our office\n                </Header>\n                <Flex jc=\"unset\">\n                    <Flex direction=\"column\" mr=\"0.8rem\" ai=\"flex-end\">\n                        <Flex mb=\"0.8rem\" jc=\"flex-end\">\n                            <First>\n                                <QueryImage\n                                    data={images[location.grid_images[0]]}\n                                    alt={location.display_name + localize(' Worklife')}\n                                    width=\"100%\"\n                                />\n                            </First>\n                            <Second>\n                                <QueryImage\n                                    data={images[location.grid_images[1]]}\n                                    alt={location.display_name + localize(' Worklife 2')}\n                                    width=\"100%\"\n                                />\n                            </Second>\n                        </Flex>\n                        <Third>\n                            <QueryImage\n                                data={images[location.grid_images[2]]}\n                                alt={location.display_name + localize(' Worklife 3')}\n                                width=\"100%\"\n                            />\n                        </Third>\n                    </Flex>\n                    <Flex ml=\"0.8rem\" jc=\"unset\">\n                        <Fourth>\n                            <QueryImage\n                                data={images[location.grid_images[3]]}\n                                alt={location.display_name + localize(' Worklife 4')}\n                                width=\"100%\"\n                            />\n                        </Fourth>\n                    </Flex>\n                </Flex>\n            </SectionContainer>\n            <SectionContainer padding=\"12rem 0\">\n                <LocationCard>\n                    <Flex jc=\"unset\" tablet_direction=\"column\">\n                        <ImageWrapper>\n                            <Iframe\n                                src={`https://www.google.com/maps/embed/v1/place?q=place_id:${location.map}&key=${map_api_key}`}\n                            />\n                        </ImageWrapper>\n                        <Flex p=\"3.2rem 6rem\" direction=\"column\" max_width=\"44.4rem\">\n                            <div style={{ maxWidth: '32.4rem' }}>\n                                <Header as=\"h3\">Location</Header>\n                                <CardText>{location.map_text}</CardText>\n                                <Flex jc=\"unset\">\n                                    <Pin />\n                                    {location.google_map_link ? (\n                                        <LinkText\n                                            rel=\"noopener noreferrer\"\n                                            target=\"_blank\"\n                                            href={location.google_map_link}\n                                        >\n                                            {location.address}\n                                        </LinkText>\n                                    ) : (\n                                        <Text>{location.address}</Text>\n                                    )}\n                                </Flex>\n                            </div>\n                        </Flex>\n                    </Flex>\n                </LocationCard>\n            </SectionContainer>\n            <Header\n                align=\"center\"\n                as=\"h2\"\n                size={'var(--text-size-header-1)'}\n                style={{ marginBottom: '6.4rem' }}\n            >\n                {`Open positions in ${display_name}`}\n            </Header>\n            <div style={{ marginBottom: '12rem' }}>\n                <LinkList list_items={mapped_positions} />\n            </div>\n            <RoleBanner />\n        </>\n    )\n}\n\nLocationLayout.propTypes = {\n    images: PropTypes.object,\n    location: PropTypes.object,\n}\n","var React = require('react');\n\nfunction Map (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"id\":\"map-svg\",\"key\":0},\"Map\"),React.createElement(\"g\",{\"fill\":\"#FF444F\",\"fillRule\":\"evenodd\",\"key\":1},[React.createElement(\"path\",{\"d\":\"M6.184 0c3.419 0 6.184 2.691 6.184 6.018-.05 3.328-3.871 7.83-6.184 9.982C3.871 13.994.05 9.199 0 6.018 0 2.691 2.765 0 6.184 0zm0 14.434c2.112-2.153 4.978-5.871 5.028-8.416 0-2.69-2.263-4.893-5.028-4.893-2.765 0-5.028 2.202-5.028 4.893.05 2.447 2.916 6.312 5.028 8.416z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M6.184 3.474c1.458 0 2.615 1.125 2.615 2.544 0 1.42-1.157 2.545-2.615 2.545-1.458 0-2.614-1.126-2.614-2.545s1.156-2.544 2.614-2.544zm0 1.125c.805 0 1.458.636 1.458 1.42 0 .782-.653 1.418-1.458 1.418-.804 0-1.458-.636-1.458-1.419S5.38 4.6 6.184 4.6z\",\"key\":1})])]);\n}\n\nMap.defaultProps = {\"role\":\"img\",\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\",\"aria-labelledby\":\"map-svg\"};\n\nmodule.exports = Map;\n\nMap.default = Map;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Container from './_container'\nimport { Text } from 'components/elements'\nimport { Flex } from 'components/containers'\nimport { LocalizedLink } from 'components/localization'\nimport device from 'themes/device'\nimport Chevron from 'images/svg/carousel-chevron.svg'\n\nconst ChevronRight = styled(Chevron)`\n    width: 16px;\n    height: 16px;\n    transform: rotate(180deg);\n\n    g {\n        g {\n            fill: var(--color-black);\n        }\n    }\n`\nconst List = styled.ul`\n    width: 99.6rem;\n    padding-bottom: 2rem;\n`\n\nconst ListItem = styled.li`\n    width: 100%;\n    height: 8.4rem;\n    border-bottom: 1px solid var(--color-grey-7);\n    transition: background-color 0.25s;\n    padding: 0 1.6rem;\n\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(244, 244, 244, 0.4);\n    }\n    @media ${device.tabletL} {\n        height: 100%;\n        padding: 1.6rem;\n    }\n`\nconst Circle = styled.span`\n    font-size: 2.1rem;\n    font-weight: bold;\n    width: 32px;\n    height: 32px;\n    margin-right: 16px;\n    border-radius: 50%;\n    background-color: var(--color-green);\n    color: var(--color-white);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst StyledText = styled(Text)`\n    min-width: 50%;\n    max-width: 45rem;\n    font-size: var(--text-size-m);\n    padding-right: 10px;\n`\nconst MiddleText = styled(Text)`\n    margin-right: auto;\n    font-size: var(--text-size-sm);\n`\n\nexport const LinkList = ({ list_items }) => (\n    <Container>\n        <List>\n            {list_items &&\n                list_items.map((item, idx) => (\n                    <ListItem key={idx}>\n                        <LocalizedLink to={item.to}>\n                            <Flex ai=\"center\" jc=\"unset\">\n                                <Flex tablet_direction=\"column\" tablet_ai=\"unset\" ai=\"center\">\n                                    <StyledText secondary=\"true\" weight=\"bold\">\n                                        {item.text}\n                                    </StyledText>\n                                    <MiddleText>{item.middle_text}</MiddleText>\n                                </Flex>\n                                <Flex ai=\"center\" width=\"unset\">\n                                    {item.number && <Circle>{item.number}</Circle>}\n                                    <ChevronRight />\n                                </Flex>\n                            </Flex>\n                        </LocalizedLink>\n                    </ListItem>\n                ))}\n        </List>\n    </Container>\n)\n\nLinkList.propTypes = {\n    list_items: PropTypes.array,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'components/form'\n\nexport const EmailButton = ({ text, ...props }) => (\n    <a href=\"mailto:recruitment@deriv.com\" {...props}>\n        <Button secondary=\"true\">{text}</Button>\n    </a>\n)\n\nEmailButton.propTypes = {\n    text: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { EmailButton } from './_email-button'\nimport { Text, Header } from 'components/elements'\nimport { Flex } from 'components/containers'\n\nconst Section = styled.section`\n    background-color: var(--color-black-3);\n    padding: 3.2rem 0;\n\n    ${Header} {\n        padding-bottom: 0.8rem;\n    }\n    ${Text} {\n        max-width: 55.9rem;\n    }\n`\n\nexport const Banner = ({ header, p1, p2, button_text }) => (\n    <Section>\n        <Flex direction=\"column\" ai=\"center\">\n            <Header align=\"center\" as=\"h3\" color=\"white\">\n                {header}\n            </Header>\n            <Text align=\"center\" color=\"white\">\n                {p1}\n            </Text>\n            <Text align=\"center\" color=\"white\" style={{ marginBottom: '2.4rem' }}>\n                {p2}\n            </Text>\n            <EmailButton text={button_text} />\n        </Flex>\n    </Section>\n)\n\nexport const RoleBanner = () => (\n    <Banner\n        header={'Don’t see your role listed?'}\n        p1={'Even if you don’t see a role that interests you, please send us your CV.'}\n        p2={'We will contact you if a job that matches your background becomes available.'}\n        button_text={'Send us your CV'}\n    />\n)\n\nBanner.propTypes = {\n    button_text: PropTypes.string,\n    header: PropTypes.string,\n    p1: PropTypes.string,\n    p2: PropTypes.string,\n}\n","import styled from 'styled-components'\nimport device from 'themes/device'\nimport { Container } from 'components/containers'\n\nconst CareerContainer = styled(Container)`\n    @media ${device.desktop} {\n        max-width: 996px;\n    }\n    @media ${device.laptopL} {\n        max-width: 996px;\n        width: 100%;\n    }\n    @media ${device.desktopL} {\n        max-width: 1400px;\n    }\n`\n\nexport default CareerContainer\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { labuan } from '../../_model/_locations/_locations'\nimport { LocationLayout } from '../_location-layout'\nimport { SEO } from 'components/containers'\nimport Layout from 'components/layout/layout'\nimport { WithIntl } from 'components/localization'\n\nconst query = graphql`\n    query {\n        labuan: file(relativePath: { eq: \"careers/labuan.jpg\" }) {\n            ...backGroundBlur\n        }\n        living_in_labuan: file(relativePath: { eq: \"careers/living_in_labuan.png\" }) {\n            ...fadeIn\n        }\n        labuan_grid_1: file(relativePath: { eq: \"careers/labuan_grid_1.png\" }) {\n            ...fadeIn\n        }\n        labuan_grid_2: file(relativePath: { eq: \"careers/labuan_grid_2.png\" }) {\n            ...fadeIn\n        }\n        labuan_grid_3: file(relativePath: { eq: \"careers/labuan_grid_3.png\" }) {\n            ...fadeIn\n        }\n        labuan_grid_4: file(relativePath: { eq: \"careers/labuan_grid_4.png\" }) {\n            ...fadeIn\n        }\n        map_labuan: file(relativePath: { eq: \"careers/map_labuan.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Labuan = () => {\n    const images = useStaticQuery(query)\n\n    return (\n        <Layout type=\"careers\" padding_top=\"10rem\">\n            <SEO title={labuan.display_name} />\n            <LocationLayout location={labuan} images={images} />\n        </Layout>\n    )\n}\n\nexport default WithIntl()(Labuan)\n"],"sourceRoot":""}