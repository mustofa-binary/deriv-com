{"version":3,"sources":["webpack:///./src/pages/careers/_layout-components/_link-list.js","webpack:///./src/pages/careers/_layout-components/_email-button.js","webpack:///./src/pages/careers/_layout-components/_banner.js","webpack:///./src/pages/careers/_layout-components/_container.js","webpack:///./src/pages/careers/_layout-components/_no-open-positions.js","webpack:///./src/pages/careers/teams/team/index.js"],"names":["ChevronRight","styled","Chevron","List","ul","ListItem","li","device","tabletL","Circle","span","StyledText","Text","MiddleText","LinkList","list_items","map","item","idx","key","to","ai","jc","tablet_direction","tablet_ai","secondary","weight","text","middle_text","width","number","EmailButton","props","href","Section","section","Header","Banner","header","p1","p2","button_text","direction","align","as","color","style","marginBottom","RoleBanner","CareerContainer","Container","desktop","laptopL","desktopL","StyledHeader","NoOpenPositionsHeader","children","size","StyledContainer","mobileL","Subheadline","Hero","name","display_name","team_description","hero_img","data","replace","height","TeamWrapper","WithIntl","team_name","getLocationHash","team","getTeamByName","type","padding_top","title","team_names","background_image","hero_image","description","positions","position","toHashFormat","id","locations","location","length"],"mappings":"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","file":"component---src-pages-careers-teams-team-index-js-d5c18dd6dd95b5e31db2.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport Container from './_container'\nimport { Text } from 'components/elements'\nimport { Flex } from 'components/containers'\nimport { LocalizedLink } from 'components/localization'\nimport device from 'themes/device'\nimport Chevron from 'images/svg/carousel-chevron.svg'\n\nconst ChevronRight = styled(Chevron)`\n    width: 16px;\n    height: 16px;\n    transform: rotate(180deg);\n\n    g {\n        g {\n            fill: var(--color-black);\n        }\n    }\n`\nconst List = styled.ul`\n    width: 99.6rem;\n    padding-bottom: 2rem;\n`\n\nconst ListItem = styled.li`\n    width: 100%;\n    height: 8.4rem;\n    border-bottom: 1px solid var(--color-grey-7);\n    transition: background-color 0.25s;\n    padding: 0 1.6rem;\n\n    a {\n        text-decoration: none;\n    }\n    &:hover {\n        cursor: pointer;\n        background-color: rgba(244, 244, 244, 0.4);\n    }\n    @media ${device.tabletL} {\n        height: 100%;\n        padding: 1.6rem;\n    }\n`\nconst Circle = styled.span`\n    font-size: 2.1rem;\n    font-weight: bold;\n    width: 32px;\n    height: 32px;\n    margin-right: 16px;\n    border-radius: 50%;\n    background-color: var(--color-green);\n    color: var(--color-white);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nconst StyledText = styled(Text)`\n    min-width: 50%;\n    max-width: 45rem;\n    font-size: var(--text-size-m);\n    padding-right: 10px;\n`\nconst MiddleText = styled(Text)`\n    margin-right: auto;\n    font-size: var(--text-size-sm);\n`\n\nexport const LinkList = ({ list_items }) => (\n    <Container>\n        <List>\n            {list_items &&\n                list_items.map((item, idx) => (\n                    <ListItem key={idx}>\n                        <LocalizedLink to={item.to}>\n                            <Flex ai=\"center\" jc=\"unset\">\n                                <Flex tablet_direction=\"column\" tablet_ai=\"unset\" ai=\"center\">\n                                    <StyledText secondary=\"true\" weight=\"bold\">\n                                        {item.text}\n                                    </StyledText>\n                                    <MiddleText>{item.middle_text}</MiddleText>\n                                </Flex>\n                                <Flex ai=\"center\" width=\"unset\">\n                                    {item.number && <Circle>{item.number}</Circle>}\n                                    <ChevronRight />\n                                </Flex>\n                            </Flex>\n                        </LocalizedLink>\n                    </ListItem>\n                ))}\n        </List>\n    </Container>\n)\n\nLinkList.propTypes = {\n    list_items: PropTypes.array,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'components/form'\n\nexport const EmailButton = ({ text, ...props }) => (\n    <a href=\"mailto:recruitment@deriv.com\" {...props}>\n        <Button secondary=\"true\">{text}</Button>\n    </a>\n)\n\nEmailButton.propTypes = {\n    text: PropTypes.string,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { EmailButton } from './_email-button'\nimport { Text, Header } from 'components/elements'\nimport { Flex } from 'components/containers'\n\nconst Section = styled.section`\n    background-color: var(--color-black-3);\n    padding: 3.2rem 0;\n\n    ${Header} {\n        padding-bottom: 0.8rem;\n    }\n    ${Text} {\n        max-width: 55.9rem;\n    }\n`\n\nexport const Banner = ({ header, p1, p2, button_text }) => (\n    <Section>\n        <Flex direction=\"column\" ai=\"center\">\n            <Header align=\"center\" as=\"h3\" color=\"white\">\n                {header}\n            </Header>\n            <Text align=\"center\" color=\"white\">\n                {p1}\n            </Text>\n            <Text align=\"center\" color=\"white\" style={{ marginBottom: '2.4rem' }}>\n                {p2}\n            </Text>\n            <EmailButton text={button_text} />\n        </Flex>\n    </Section>\n)\n\nexport const RoleBanner = () => (\n    <Banner\n        header={'Don’t see your role listed?'}\n        p1={'Even if you don’t see a role that interests you, please send us your CV.'}\n        p2={'We will contact you if a job that matches your background becomes available.'}\n        button_text={'Send us your CV'}\n    />\n)\n\nBanner.propTypes = {\n    button_text: PropTypes.string,\n    header: PropTypes.string,\n    p1: PropTypes.string,\n    p2: PropTypes.string,\n}\n","import styled from 'styled-components'\nimport device from 'themes/device'\nimport { Container } from 'components/containers'\n\nconst CareerContainer = styled(Container)`\n    @media ${device.desktop} {\n        max-width: 996px;\n    }\n    @media ${device.laptopL} {\n        max-width: 996px;\n        width: 100%;\n    }\n    @media ${device.desktopL} {\n        max-width: 1400px;\n    }\n`\n\nexport default CareerContainer\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Header } from 'components/elements'\n\nconst StyledHeader = styled(Header)`\n    color: rgba(51, 51, 51, 0.32);\n`\n\nexport const NoOpenPositionsHeader = ({ children }) => (\n    <StyledHeader align=\"center\" size=\"var(--text-size-l)\" as=\"h4\">\n        {children}\n    </StyledHeader>\n)\n\nNoOpenPositionsHeader.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { RoleBanner } from '../../_layout-components/_banner'\nimport { LinkList } from '../../_layout-components/_link-list'\nimport { NoOpenPositionsHeader } from '../../_layout-components/_no-open-positions'\nimport { getTeamByName, team_names } from '../../_controller/_teams'\nimport { locations } from '../../_model/_locations/_locations'\nimport { SEO, Container } from 'components/containers'\nimport { BackgroundImage, Text, Header } from 'components/elements'\nimport Layout from 'components/layout/layout'\nimport { WithIntl } from 'components/localization'\nimport { getLocationHash, toHashFormat } from 'common/utility'\nimport device from 'themes/device'\n\nconst StyledContainer = styled(Container)`\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n`\n\nconst StyledHeader = styled(Header)`\n    font-size: var(--text-size-xl);\n    margin-bottom: 1.6rem;\n    color: var(--color-white);\n    word-break: break-word;\n\n    @media ${device.mobileL} {\n        max-width: 300px;\n    }\n`\n\nconst Subheadline = styled(Text)`\n    font-size: 2rem;\n    color: var(--color-white);\n    max-width: 98.4rem;\n`\nconst query = graphql`\n    query {\n        devops: file(relativePath: { eq: \"careers/hero-devops.jpg\" }) {\n            ...backGroundBlur\n        }\n        compliance: file(relativePath: { eq: \"careers/hero-compliance.jpg\" }) {\n            ...backGroundBlur\n        }\n        marketing: file(relativePath: { eq: \"careers/hero-marketing.jpg\" }) {\n            ...backGroundBlur\n        }\n        qualityassurance: file(relativePath: { eq: \"careers/hero-quality-assurance.jpg\" }) {\n            ...backGroundBlur\n        }\n        accountsandpayments: file(relativePath: { eq: \"careers/hero-accounts-payments.jpg\" }) {\n            ...backGroundBlur\n        }\n        backend: file(relativePath: { eq: \"careers/hero-back-end.jpg\" }) {\n            ...backGroundBlur\n        }\n        businessintelligence: file(relativePath: { eq: \"careers/hero-business-intelligence.jpg\" }) {\n            ...backGroundBlur\n        }\n        content: file(relativePath: { eq: \"careers/hero-content.jpg\" }) {\n            ...backGroundBlur\n        }\n        cryptodevelopment: file(relativePath: { eq: \"careers/hero-crypto-development.jpg\" }) {\n            ...backGroundBlur\n        }\n        customersupport: file(relativePath: { eq: \"careers/hero-customer-support.jpg\" }) {\n            ...backGroundBlur\n        }\n        disasterrecovery: file(relativePath: { eq: \"careers/hero-disaster-recovery.jpg\" }) {\n            ...backGroundBlur\n        }\n        frontend: file(relativePath: { eq: \"careers/hero-front-end.jpg\" }) {\n            ...backGroundBlur\n        }\n        hrrecruitment: file(relativePath: { eq: \"careers/hero-hr-recruitment.jpg\" }) {\n            ...backGroundBlur\n        }\n        internalaudit: file(relativePath: { eq: \"careers/hero-internal-audit.jpg\" }) {\n            ...backGroundBlur\n        }\n        itadmin: file(relativePath: { eq: \"careers/hero-it-admin.jpg\" }) {\n            ...backGroundBlur\n        }\n        productdesign: file(relativePath: { eq: \"careers/hero-product-design.jpg\" }) {\n            ...backGroundBlur\n        }\n        projectmanagement: file(relativePath: { eq: \"careers/hero-project-management.jpg\" }) {\n            ...backGroundBlur\n        }\n        quants: file(relativePath: { eq: \"careers/hero-quants.jpg\" }) {\n            ...backGroundBlur\n        }\n        security: file(relativePath: { eq: \"careers/hero-security.jpg\" }) {\n            ...backGroundBlur\n        }\n    }\n`\n\nconst Hero = ({ name, display_name, team_description }) => {\n    if (!name) return null\n    const hero_img = useStaticQuery(query)\n\n    return (\n        <BackgroundImage\n            data={hero_img[name.replace(/-+/g, '')]}\n            style={{\n                height: '64.6rem',\n                width: '100%',\n            }}\n        >\n            <StyledContainer>\n                <StyledHeader as=\"h1\" align=\"center\">\n                    {display_name}\n                </StyledHeader>\n                <Subheadline align=\"center\">{team_description}</Subheadline>\n            </StyledContainer>\n        </BackgroundImage>\n    )\n}\n\nconst TeamWrapper = styled.section`\n    padding: 12rem 0;\n\n    ${Header} {\n        padding-bottom: 8rem;\n    }\n`\nconst Team = () => {\n    const team_name = getLocationHash()\n    if (!team_name) return null\n    const team = getTeamByName(team_name)\n\n    return (\n        <Layout type=\"careers\" padding_top=\"10rem\">\n            <SEO title={`Team ${team_names[team.name]}`} />\n            <Hero\n                background_image={team.hero_image}\n                display_name={team_names[team.name]}\n                name={team.name}\n                team_description={team.description}\n            />\n            <TeamWrapper>\n                <Header as=\"h2\" size=\"var(--text-size-l)\" align=\"center\">\n                    Open positions\n                </Header>\n                <LinkList\n                    list_items={\n                        team.positions &&\n                        team.positions.map((position) => ({\n                            text: position.title,\n                            to: `careers/jobs/job#${toHashFormat(position.id)}`,\n                            middle_text: locations[position.location],\n                        }))\n                    }\n                />\n                {team.positions && !team.positions.length && (\n                    <NoOpenPositionsHeader>\n                        {`Sorry, there are currently no open positions for ${\n                            team_names[team.name]\n                        }`}\n                    </NoOpenPositionsHeader>\n                )}\n            </TeamWrapper>\n            <RoleBanner />\n        </Layout>\n    )\n}\n\nHero.propTypes = {\n    background_image: PropTypes.string,\n    display_name: PropTypes.string,\n    name: PropTypes.string,\n    team_description: PropTypes.string,\n}\n\nexport default WithIntl()(Team)\n"],"sourceRoot":""}